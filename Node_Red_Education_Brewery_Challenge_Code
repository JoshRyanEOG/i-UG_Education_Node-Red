[
    {
        "id": "f17be408b9ab2709",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 1400,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "5669e50507e0b942",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Insert into a table",
        "info": "",
        "x": 1400,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7c965743b5bf9d4c",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "F insert a ROW",
        "func": "\n// Variables for the 'BOIL' station to be \n// used throughout the flow\n\nvar valuef = flow.get('bvaluef') || 0;\nvar lossf = flow.get('blossf') || 0;\nvar valuexx = flow.get('bvaluexx') || 0;\n\nlet payloadin = valuexx\nlet station = \"BOIL\"\n\nlet payloadout = `INSERT INTO  IUGRED_99.brewtrans VALUES(current_date, current_time, '${station}', ${payloadin});`\n\n\nmsg.payload = payloadout\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1320,
        "wires": [
            [
                "f17be408b9ab2709",
                "a2e2b43da97ce858"
            ]
        ]
    },
    {
        "id": "a2e2b43da97ce858",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Report to table on UI",
        "func": "\nlet limit = msg.limit\n\nlet payloadout = `(select * from IUGRED_99.Brewtrans where process_name = 'BOIL'\nORDER BY last_update DESC, registered_at DESC limit ${limit}) \nORDER BY last_update ASC, registered_at ASC;` \n\n\nmsg.payload = payloadout\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 1400,
        "wires": [
            [
                "6e7e365fbd625cfa"
            ]
        ]
    },
    {
        "id": "24bc73b786f0436e",
        "type": "ui_table",
        "z": "6cb9e827f1da3428",
        "group": "3e86821e0e02d9da",
        "name": "Brew flow log",
        "order": 2,
        "width": 8,
        "height": 7,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1790,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4661035436a601d7",
        "type": "gate",
        "z": "6cb9e827f1da3428",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 630,
        "y": 1320,
        "wires": [
            [
                "b4d29d2e32c5e4d2"
            ]
        ]
    },
    {
        "id": "277f32d7cca45369",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "Close Gate",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "close",
        "payloadType": "str",
        "x": 400,
        "y": 1320,
        "wires": [
            [
                "4661035436a601d7"
            ]
        ]
    },
    {
        "id": "218067512ed23828",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "Open Gate",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "open",
        "payloadType": "str",
        "x": 400,
        "y": 1240,
        "wires": [
            [
                "4661035436a601d7"
            ]
        ]
    },
    {
        "id": "6e7e365fbd625cfa",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 1600,
        "y": 1400,
        "wires": [
            [
                "24bc73b786f0436e"
            ]
        ]
    },
    {
        "id": "637fb7c5b2b09151",
        "type": "ui_gauge",
        "z": "6cb9e827f1da3428",
        "name": "Brew Temperature",
        "group": "3e86821e0e02d9da",
        "order": 1,
        "width": 8,
        "height": 9,
        "gtype": "gage",
        "title": "Brew Temperature",
        "label": "units",
        "format": "{{temp}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "45",
        "seg2": "85",
        "className": "",
        "x": 1410,
        "y": 1480,
        "wires": []
    },
    {
        "id": "864db1b0f49f1586",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Select last 'x' rows for UI Table",
        "info": "",
        "x": 1440,
        "y": 1360,
        "wires": []
    },
    {
        "id": "edf04a018395a984",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Maintain Gauge",
        "info": "",
        "x": 1400,
        "y": 1440,
        "wires": []
    },
    {
        "id": "c6376d7d65235778",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Heat Loss",
        "func": "\n// Variables for the 'BOIL' station to be \n// used throughout the flow\n\nvar valuef = flow.get('bvaluef') || 0;\nvar lossf = flow.get('blossf') || 0;\nvar valuexx = flow.get('bvaluexx') || 0;\n\nconst bal = valuexx - lossf\n\nflow.set('bvaluexx', bal)\n\nlet gauge = bal * 1\n\nmsg.temp = bal\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1320,
        "wires": [
            [
                "7c965743b5bf9d4c",
                "2914c6f6158e2cc3",
                "637fb7c5b2b09151"
            ]
        ]
    },
    {
        "id": "2914c6f6158e2cc3",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 1400,
        "wires": [
            [
                "4661035436a601d7"
            ]
        ]
    },
    {
        "id": "a849041685dd4e5d",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "The Process - BOIL",
        "info": "",
        "x": 890,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b4d29d2e32c5e4d2",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Therms in",
        "func": "\n// Variables for the 'BOIL' station to be \n// used throughout the flow\n\nvar valuef = flow.get('bvaluef') || 0;\nvar lossf = flow.get('blossf') || 0;\nvar valuexx = flow.get('bvaluexx') || 0;\nvar adjust = global.get('adjust') || 0;\n\nlet bal = valuexx + valuef + adjust\n\nflow.set('bvaluexx', bal)\n\nmsg.temp = bal\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1320,
        "wires": [
            [
                "c6376d7d65235778"
            ]
        ]
    },
    {
        "id": "80f2d4e25c45b110",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 400,
        "y": 320,
        "wires": [
            [
                "d42fbc4a02ab304d",
                "c809a0a319b9abc6"
            ]
        ]
    },
    {
        "id": "188cd7b9bc506a66",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Pick up Cases Demand",
        "func": "\n// Define the variables for the 'BOIL' station to be \n// used throughout the flow.  Set to start values.\n\nvar valuef = flow.get('valuef') || 0;\nvar lossf = flow.get('lossf') || 0;\nvar valuexx = flow.get('valuexx') || 0;\n\nflow.set('valuef', 0)\nflow.set('lossf', 0)\nflow.set('valuexx', 60)\n\nlet payloadout = `(select * from IUGRED_99.Brewctl where PROCESS_NAME = 'CASES');`\n\nmsg.payload = payloadout\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 320,
        "wires": [
            [
                "80f2d4e25c45b110"
            ]
        ]
    },
    {
        "id": "1db6ba2461510903",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "START",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "payload2",
                "v": "0",
                "vt": "str"
            },
            {
                "p": "limit",
                "v": "10",
                "vt": "num"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "temp",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 520,
        "wires": [
            [
                "188cd7b9bc506a66",
                "e66593ab5ddc0335"
            ]
        ]
    },
    {
        "id": "d42fbc4a02ab304d",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Get file values",
        "func": "\n// Variables for the 'BOIL' station to be \n// used throughout the flow\n\nvar valuef = flow.get('valuef') || 0;\nvar lossf = flow.get('lossf') || 0;\nvar valuexx = flow.get('valuexx') || 0;\n\nflow.set('valuef', 0)\nflow.set('lossf', 0)\nflow.set('valuexx', 60)\n\nlet payload = msg.payload\nlet station = payload\nlet workcases = 0\n\n\n    workcases = station[0].PROCESS_LOSSES\n    \n    \n\nconst wkcases = parseInt(workcases)\n   \nlet outboil = 3 * wkcases\nlet outwater = 10 * wkcases\n\n\nmsg.payload = `update IUGRED_99.brewctl set PROCESS_LOSSES = ${outboil} where PROCESS_NAME = 'BOIL' `\nmsg.payload2 = `update IUGRED_99.brewctl set PROCESS_LOSSES = ${outwater} where PROCESS_NAME = 'WATER' `\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 320,
        "wires": [
            [
                "f4a12f9d8e6557f1",
                "2ced611a388580b7"
            ]
        ]
    },
    {
        "id": "f4a12f9d8e6557f1",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 740,
        "y": 320,
        "wires": [
            [
                "6b0e6b89d3457053"
            ]
        ]
    },
    {
        "id": "2ced611a388580b7",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Get file values",
        "func": "msg.payload = msg.payload2\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 380,
        "wires": [
            [
                "c2cf33eb7313916d",
                "4128b7d6d8bc5eac",
                "991ec05c487ad89b",
                "d625fc78c90f55c7"
            ]
        ]
    },
    {
        "id": "c2cf33eb7313916d",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 740,
        "y": 380,
        "wires": [
            [
                "0593b801ee97ccb5"
            ]
        ]
    },
    {
        "id": "7023bdad12ce8601",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Set Production Starting Values - Based on production qty entered above.",
        "info": "",
        "x": 350,
        "y": 280,
        "wires": []
    },
    {
        "id": "054d4f832541d939",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "BOIL Station",
        "info": "",
        "x": 150,
        "y": 1180,
        "wires": []
    },
    {
        "id": "40d051109f2f66d2",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Maintain Log",
        "info": "",
        "x": 1790,
        "y": 1360,
        "wires": []
    },
    {
        "id": "7cfbe0c772ed6bd2",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 1460,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ccd63356ee1cfd09",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Insert into a table",
        "info": "",
        "x": 1480,
        "y": 880,
        "wires": []
    },
    {
        "id": "a93d95538b9f8a98",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "F insert a ROW",
        "func": "\n// Variables for the 'WATER' station to be \n// used throughout the flow\n\nvar valuef = flow.get('wvaluef') || 0;\nvar lossf = flow.get('wlossf') || 0;\nvar valuexx = flow.get('wvaluexx') || 0;\n\nlet payloadin = valuexx\nlet station = \"WATER\"\n\nlet payloadout = `INSERT INTO  IUGRED_99.brewtrans VALUES(current_date, current_time, '${station}', ${payloadin});`\n\nmsg.payload = payloadout\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 940,
        "wires": [
            [
                "7cfbe0c772ed6bd2",
                "63ac60c5641680e6"
            ]
        ]
    },
    {
        "id": "63ac60c5641680e6",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Report to table on UI",
        "func": "\nlet limit = \"0\"\n\nlimit = msg.limit\n\n\nlet payloadout = `(select * from IUGRED_99.Brewtrans where process_name = 'WATER'\nORDER BY last_update DESC, registered_at DESC limit ${limit}) \nORDER BY last_update ASC, registered_at ASC;` \n \nmsg.payload = payloadout\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1020,
        "wires": [
            [
                "27ddcdcfeb3bc3a1"
            ]
        ]
    },
    {
        "id": "665713854d566901",
        "type": "ui_table",
        "z": "6cb9e827f1da3428",
        "group": "e207eea38c442aee",
        "name": "Brew water log",
        "order": 2,
        "width": 8,
        "height": 7,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1860,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7890969e0be713e8",
        "type": "gate",
        "z": "6cb9e827f1da3428",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 610,
        "y": 940,
        "wires": [
            [
                "8322c6e9746952fa"
            ]
        ]
    },
    {
        "id": "c725c9e422acb391",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "Close Gate",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "close",
        "payloadType": "str",
        "x": 400,
        "y": 980,
        "wires": [
            [
                "7890969e0be713e8"
            ]
        ]
    },
    {
        "id": "f9039d4a355681fb",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "Open Gate",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "open",
        "payloadType": "str",
        "x": 400,
        "y": 900,
        "wires": [
            [
                "7890969e0be713e8"
            ]
        ]
    },
    {
        "id": "27ddcdcfeb3bc3a1",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 1660,
        "y": 1020,
        "wires": [
            [
                "665713854d566901"
            ]
        ]
    },
    {
        "id": "68b832421743df93",
        "type": "ui_gauge",
        "z": "6cb9e827f1da3428",
        "name": "Brew Water",
        "group": "e207eea38c442aee",
        "order": 1,
        "width": 8,
        "height": 9,
        "gtype": "wave",
        "title": "Brew Water",
        "label": "Litres",
        "format": "{{value | number}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "45",
        "seg2": "85",
        "className": "",
        "x": 1430,
        "y": 1120,
        "wires": []
    },
    {
        "id": "fda7cc17c0194647",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Select last 'x' rows for UI Table",
        "info": "",
        "x": 1480,
        "y": 980,
        "wires": []
    },
    {
        "id": "e5954065e2656822",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Maintain Gauge",
        "info": "",
        "x": 1440,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b9433113ec83cc9d",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Water Consumed",
        "func": "\n// Variables for the 'WATER' station to be \n// used throughout the flow\n\nvar valuef = flow.get('wvaluef') || 0;\nvar lossf = flow.get('wlossf') || 0;\nvar valuexx = flow.get('wvaluexx') || 0;\nvar vsafety = flow.get('bvaluexx') || 0;\n\n//Set min water level\nlet bal = 80\n\n// Boiler Blow Control\nif (vsafety >= 80 && vsafety <= 90) {\n\nbal = valuexx - lossf\n\nflow.set('wvaluexx', bal)\n\n}\n\nmsg.value = bal\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 940,
        "wires": [
            [
                "a93d95538b9f8a98",
                "68b832421743df93",
                "b0ba40afea3107b0"
            ]
        ]
    },
    {
        "id": "b0ba40afea3107b0",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 1060,
        "wires": [
            [
                "7890969e0be713e8"
            ]
        ]
    },
    {
        "id": "8322c6e9746952fa",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Water Fill",
        "func": "\n// Variables for the 'WATER' station to be \n// used throughout the flow\n\nvar valuef = flow.get('wvaluef') || 0;\nvar lossf = flow.get('wlossf') || 0;\nvar valuexx = flow.get('wvaluexx') || 80;\nvar vsafety = flow.get('bvaluexx') || 0;\n\n// Boiler Blow Control\n\nif (vsafety >= 80  && vsafety <= 90) {\n   \n\nlet bal = valuexx + valuef\n\nflow.set('wvaluexx', bal)\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 940,
        "wires": [
            [
                "b9433113ec83cc9d"
            ]
        ]
    },
    {
        "id": "80d1532e19a90825",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 800,
        "y": 800,
        "wires": [
            [
                "a3f8843d1eb00788"
            ]
        ]
    },
    {
        "id": "4128b7d6d8bc5eac",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Set SQL for WATER",
        "func": "\n// Define the variables for the 'WATER' station to be \n// used throughout the flow.  Set the start values\n\nvar valuef = flow.get('wvaluef') || 0;\nvar lossf = flow.get('wlossf') || 0;\nvar valuexx = flow.get('wvaluexx') || 80;\n\nflow.set('wvaluef', 0)\nflow.set('wlossf', 0)\nflow.set('wvaluexx', 80)\n\nlet payloadout = `(select * from IUGRED_99.Brewctl where PROCESS_NAME = 'WATER'\n);`\n\nmsg.payload = payloadout\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 800,
        "wires": [
            [
                "80d1532e19a90825"
            ]
        ]
    },
    {
        "id": "9710a5861481d944",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "WATER Starting Values - From table as set by production qty",
        "info": "",
        "x": 940,
        "y": 740,
        "wires": []
    },
    {
        "id": "449dc347dc7f6b2b",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Water Station",
        "info": "# WATER",
        "x": 130,
        "y": 740,
        "wires": []
    },
    {
        "id": "ebfe1d8c38df551e",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Maintain Log",
        "info": "",
        "x": 1850,
        "y": 960,
        "wires": []
    },
    {
        "id": "a3f8843d1eb00788",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Set Start values for WATER",
        "func": "\n// Variables for the 'WATER' station to be \n// used throughout the flow\n\nvar valuef = flow.get('wvaluef') || 0;\nvar lossf = flow.get('wlossf') || 0;\nvar valuexx = flow.get('wvaluexx') || 80;\n\nlet payload = msg.payload\nlet workwaterin = payload[0].PROCESS_INPUT;\nlet workwaterloss = payload[0].PROCESS_LOSSES;\n\nconst wkwaterin = parseInt(workwaterin) \nconst wkwaterloss = parseInt(workwaterloss) \n\nflow.set('wvaluef', wkwaterin)\nflow.set('wlossf', wkwaterloss)\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 800,
        "wires": [
            [
                "7890969e0be713e8"
            ]
        ]
    },
    {
        "id": "220d0db96bc9db3b",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 1620,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "881d9d404305123b",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Insert into a table",
        "info": "",
        "x": 1400,
        "y": 2000,
        "wires": []
    },
    {
        "id": "94c62098e32c2189",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "F insert a ROW",
        "func": "\n// Variables for the 'CASES' station to be \n// used throughout the flow\n\nvar valuef = flow.get('cvaluef') || 0;\nvar lossf = flow.get('clossf') || 0;\nvar valuexx = flow.get('cvaluexx') || 0;\n\nlet payloadin = valuexx\nlet station = \"CASES\"\n\nlet payloadout = `INSERT INTO  IUGRED_99.brewtrans VALUES(current_date, current_time, '${station}', ${payloadin});`\n\nmsg.payload = payloadout\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 2060,
        "wires": [
            [
                "220d0db96bc9db3b",
                "5f54bef562084129"
            ]
        ]
    },
    {
        "id": "5f54bef562084129",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Report to table on UI",
        "func": "\nlet limit = \"0\"\n\nlimit = msg.limit\n\n\nlet payloadout = `(select * from IUGRED_99.Brewtrans where process_name = 'CASES'\nORDER BY last_update DESC, registered_at DESC limit ${limit}) \nORDER BY last_update ASC, registered_at ASC;` \n \nmsg.payload = payloadout\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 2140,
        "wires": [
            [
                "906864e36a30bad3"
            ]
        ]
    },
    {
        "id": "c7ebff1c939b513b",
        "type": "ui_table",
        "z": "6cb9e827f1da3428",
        "group": "3a71324c40ab6674",
        "name": "Cases and Bottles out",
        "order": 4,
        "width": 8,
        "height": 6,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 2020,
        "y": 2140,
        "wires": []
    },
    {
        "id": "09bcc1db1992e246",
        "type": "gate",
        "z": "6cb9e827f1da3428",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 650,
        "y": 2060,
        "wires": [
            [
                "6501cf1e789f0903"
            ]
        ]
    },
    {
        "id": "99020f1f7791328a",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "Close Gate",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "close",
        "payloadType": "str",
        "x": 460,
        "y": 2080,
        "wires": [
            [
                "09bcc1db1992e246"
            ]
        ]
    },
    {
        "id": "19ebdfe723c03fae",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "Open Gate",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "open",
        "payloadType": "str",
        "x": 460,
        "y": 2020,
        "wires": [
            [
                "09bcc1db1992e246"
            ]
        ]
    },
    {
        "id": "906864e36a30bad3",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 1780,
        "y": 2140,
        "wires": [
            [
                "c7ebff1c939b513b"
            ]
        ]
    },
    {
        "id": "54fe04e04a5e38c7",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Select last 'x' rows for UI Table",
        "info": "",
        "x": 1840,
        "y": 2100,
        "wires": []
    },
    {
        "id": "0fd727b27d949d96",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Maintain Gauge and graph",
        "info": "",
        "x": 1470,
        "y": 2220,
        "wires": []
    },
    {
        "id": "cb45b8dc7ecec0b5",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Beer Out (Case = 10 botles)",
        "func": "\n// Variables for the 'Case' station to be \n// used throughout the flow\n\nvar valuef = flow.get('cvaluef') || 0;\nvar lossf = flow.get('clossf') || 0;\nvar valuexx = flow.get('cvaluexx') || 0;\nvar crateload = flow.get('crateload') || 0;\nvar vsafety = flow.get('bvaluexx') || 0;\n\nconst bal = (lossf * 10) + valuexx\nconst crate = (lossf * 10) + crateload\n\n// Boiler Blow Control\nif (vsafety >= 80 && vsafety <= 90) {\n\n\nflow.set('crateload', crate)\nflow.set('cvaluexx', bal)\n\n}\n\nmsg.value = bal\nmsg.topic = crate\nmsg.payload = (lossf * 10)\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2060,
        "wires": [
            [
                "94c62098e32c2189",
                "2459b428e1f8d6fd",
                "d8bb43436ce0e9d7",
                "7f59f99fb34e2c36",
                "4cad546e01a59740"
            ]
        ]
    },
    {
        "id": "7f59f99fb34e2c36",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 2140,
        "wires": [
            [
                "09bcc1db1992e246"
            ]
        ]
    },
    {
        "id": "51881f14cccf7e37",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Casing up the bottles",
        "info": "",
        "x": 660,
        "y": 2140,
        "wires": []
    },
    {
        "id": "6501cf1e789f0903",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Empty Cases In",
        "func": "\n// Variables for the 'CASES' station to be \n// used throughout the flow\n\nvar valuef = flow.get('cvaluef') || 0;\nvar lossf = flow.get('clossf') || 0;\nvar valuexx = flow.get('cvaluexx') || 0;\n\n// no accounting at this time\n//     let bal = valuexx + valuef\n\n//     flow.set('cvaluexx', bal)\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2060,
        "wires": [
            [
                "cb45b8dc7ecec0b5"
            ]
        ]
    },
    {
        "id": "a8cb28abd3c8bba5",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 780,
        "y": 1880,
        "wires": [
            [
                "2d2422620f807123"
            ]
        ]
    },
    {
        "id": "991ec05c487ad89b",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Set SQL for Case Production",
        "func": "\n// Define the variables for the 'BOIL' station to be \n// used throughout the flow. Set the start values\n\nvar valuef = flow.get('cvaluef') || 0;\nvar lossf = flow.get('clossf') || 0;\nvar valuexx = flow.get('cvaluexx') || 0;\n\nflow.set('cvaluef', 0)\nflow.set('clossf', 0)\nflow.set('cvaluexx', 0)\n\nlet payloadout = `(select * from IUGRED_99.Brewctl where PROCESS_NAME = 'CASES'\n);`\n\nmsg.payload = payloadout\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1880,
        "wires": [
            [
                "a8cb28abd3c8bba5"
            ]
        ]
    },
    {
        "id": "28664463e3226bd0",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "CASES Starting Values - From table as set by production qty",
        "info": "",
        "x": 1540,
        "y": 1880,
        "wires": []
    },
    {
        "id": "483c0facef6d36f0",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "CASES Station",
        "info": "",
        "x": 220,
        "y": 1880,
        "wires": []
    },
    {
        "id": "c85936c2241e64aa",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Maintain Log",
        "info": "",
        "x": 1750,
        "y": 2320,
        "wires": []
    },
    {
        "id": "2d2422620f807123",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Set Start values for Case production",
        "func": "\n// Variables for the 'CASES' station to be \n// used throughout the flow\n\nvar valuef = flow.get('cvaluef') || 0;\nvar lossf = flow.get('clossf') || 0;\nvar valuexx = flow.get('cvaluexx') || 0;\nvar crateload = flow.get('crateload') || 0;\n\nlet payload = msg.payload\nlet workcasesin = payload[0].PROCESS_INPUT;\nlet workcasesloss = payload[0].PROCESS_LOSSES;\n\nconst wkcasesin = parseInt(workcasesin) \nconst wkcasesloss = parseInt(workcasesloss) \n\nflow.set('cvaluef', wkcasesin)\nflow.set('clossf', wkcasesloss)\nflow.set('crateload', 0)\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1880,
        "wires": [
            [
                "09bcc1db1992e246"
            ]
        ]
    },
    {
        "id": "250e7d66b01607cc",
        "type": "ui_chart",
        "z": "6cb9e827f1da3428",
        "name": "",
        "group": "3a71324c40ab6674",
        "order": 3,
        "width": 8,
        "height": 4,
        "label": "CASES LOADED INTO VAN (Max 10)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "1",
        "ymax": "11",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1330,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "0972f09152387659",
        "type": "ui_led",
        "z": "6cb9e827f1da3428",
        "order": 2,
        "group": "3a71324c40ab6674",
        "width": 8,
        "height": 2,
        "label": "van fully loaded indicator",
        "labelPlacement": "right",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Vanload indicator",
        "x": 1910,
        "y": 2460,
        "wires": []
    },
    {
        "id": "d8bb43436ce0e9d7",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Reset indicator if Van full",
        "func": "\n// Variables for the 'WATER' station to be \n// used throughout the flow\n\nvar valuef = flow.get('cvaluef') || 0;\nvar lossf = flow.get('clossf') || 0;\nvar valuexx = flow.get('cvaluexx') || 0;\nvar crateload = flow.get('crateload') || 0;\n\nconst resett = 0\n\nmsg.payload = false;\n\nif (crateload == 100)  {\n\nmsg.payload = true;\n\n    return [msg, null]; \n\n}\n\nelse {\n\n    return [null, msg]; \n\n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2460,
        "wires": [
            [
                "7db05e8908fbbc34",
                "88b1c0e0590a6e63"
            ],
            [
                "7db05e8908fbbc34"
            ]
        ]
    },
    {
        "id": "7db05e8908fbbc34",
        "type": "json",
        "z": "6cb9e827f1da3428",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1670,
        "y": 2460,
        "wires": [
            [
                "0972f09152387659",
                "777be62f81b91e77"
            ]
        ]
    },
    {
        "id": "88b1c0e0590a6e63",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Reset if van full (10 cases)",
        "func": "\n// Variables for the 'WATER' station to be \n// used throughout the flow\n\nvar valuef = flow.get('cvaluef') || 0;\nvar lossf = flow.get('clossf') || 0;\nvar valuexx = flow.get('cvaluexx') || 0;\nvar crateload = flow.get('crateload') || 0;\n\nconst resett = 0\n\n\nif (crateload == 100) {\n \n    msg.payload = ([])\n\n\n    flow.set('crateload', resett)\n\n  \n    }\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2400,
        "wires": [
            [
                "4264c60dfbddc123"
            ]
        ]
    },
    {
        "id": "d91c072260cf2f3f",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "Send [] to Clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 900,
        "y": 2300,
        "wires": [
            [
                "250e7d66b01607cc"
            ]
        ]
    },
    {
        "id": "4264c60dfbddc123",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1220,
        "y": 2340,
        "wires": [
            [
                "250e7d66b01607cc"
            ]
        ]
    },
    {
        "id": "127a3880bfc0da04",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 800,
        "y": 1180,
        "wires": [
            [
                "b264322153c1f662"
            ]
        ]
    },
    {
        "id": "d625fc78c90f55c7",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Set SQL for BOIL",
        "func": "\n// Define the variables for the 'WATER' station to be \n// used throughout the flow.  Set the start values\n\nvar valuef = flow.get('bvaluef') || 0;\nvar lossf = flow.get('bossf') || 0;\nvar valuexx = flow.get('bvaluexx') || 60;\n\nflow.set('bvaluef', 0)\nflow.set('blossf', 0)\nflow.set('bvaluexx', 60)\n\nlet payloadout = `(select * from IUGRED_99.Brewctl where PROCESS_NAME = 'BOIL'\n);`\n\nmsg.payload = payloadout\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1180,
        "wires": [
            [
                "127a3880bfc0da04"
            ]
        ]
    },
    {
        "id": "b264322153c1f662",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Set Start valies for BOIL",
        "func": "\n// Variables for the 'WATER' station to be \n// used throughout the flow\n\nvar valuef = flow.get('bvaluef') || 0;\nvar lossf = flow.get('blossf') || 0;\nvar valuexx = flow.get('bvaluexx') || 0;\nvar adjust = flow.get('adjust') || 0;\n\nlet payload = msg.payload\nlet workwaterin = payload[0].PROCESS_INPUT;\nlet workwaterloss = payload[0].PROCESS_LOSSES;\n\nconst wkboilin = parseInt(workwaterin) \nconst wkboilloss = parseInt(workwaterloss) \n\nlet adjusted = wkboilin + adjust\n\nflow.set('bvaluef', adjusted)\nflow.set('blossf', wkboilloss)\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1180,
        "wires": [
            [
                "4661035436a601d7"
            ]
        ]
    },
    {
        "id": "9e36e2e429c94621",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "BOIL Starting Values - From table as set by production qty",
        "info": "",
        "x": 870,
        "y": 1140,
        "wires": []
    },
    {
        "id": "8501cdf474179eb5",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "REMEMBER TO OPEN GATES BEFORE STARTING PRODUCTION",
        "info": "",
        "x": 260,
        "y": 560,
        "wires": []
    },
    {
        "id": "8bcbd4aa91391a5b",
        "type": "ui_form",
        "z": "6cb9e827f1da3428",
        "name": "",
        "label": "PRODUCTION",
        "group": "01b5bec2534e4f4a",
        "order": 1,
        "width": 8,
        "height": 1,
        "options": [
            {
                "label": "Case Production per 5 sec",
                "value": "cases",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "cases": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "Form",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "a63c8150bfe5e23d",
                "3787da9d1e7edae2"
            ]
        ]
    },
    {
        "id": "6c68e99738963556",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 580,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a63c8150bfe5e23d",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "F insert a ROW",
        "func": "\nlet cases = \" \"\n\ncases = msg.payload.cases\n\n\nconst caseout = parseInt(cases) \n\n\nmsg.payload = `update IUGRED_99.brewctl set PROCESS_LOSSES = ${caseout} where PROCESS_NAME = 'CASES' `\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            [
                "6c68e99738963556"
            ]
        ]
    },
    {
        "id": "562bb34de92f1944",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Form To Set Production Starting Values - Number of cases per second",
        "info": "",
        "x": 310,
        "y": 140,
        "wires": []
    },
    {
        "id": "f778c13c2bd933ba",
        "type": "ui_slider",
        "z": "6cb9e827f1da3428",
        "name": "",
        "label": "WATER IN Adj.",
        "tooltip": "",
        "group": "e207eea38c442aee",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "-50",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 760,
        "y": 180,
        "wires": [
            [
                "df4a1b13dc02c056"
            ]
        ]
    },
    {
        "id": "dbbd4ee0f9544b7d",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 1200,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "df4a1b13dc02c056",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "WATER VARIABLE AND TABLE",
        "func": "\nlet water = 0\n\nvar valuef = flow.get('wvaluef') || 0;\n\n\nwater = msg.payload\n\n\nflow.set('wvaluef', water)\n\n\nmsg.payload = `update IUGRED_99.brewctl set PROCESS_INPUT = ${water} where PROCESS_NAME = 'WATER' `\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 180,
        "wires": [
            [
                "dbbd4ee0f9544b7d"
            ]
        ]
    },
    {
        "id": "b831ade403eef9c6",
        "type": "ui_slider",
        "z": "6cb9e827f1da3428",
        "name": "",
        "label": "THERMS IN Adj.",
        "tooltip": "",
        "group": "3e86821e0e02d9da",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "-25",
        "max": "25",
        "step": 1,
        "className": "",
        "x": 1410,
        "y": 180,
        "wires": [
            [
                "12a689f82d468f84"
            ]
        ]
    },
    {
        "id": "4ed4bc7f2457e810",
        "type": "DB2 for i",
        "z": "6cb9e827f1da3428",
        "mydb": "c783136d02b66193",
        "name": "",
        "arraymode": true,
        "x": 1880,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "12a689f82d468f84",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "BOIL VARIABLE AND TABLE",
        "func": "\nvar adjust = global.get('adjust') || 0;\nlet gas = 0\n\n\ngas = msg.payload\n\nglobal.set(\"adjust\", gas)\n\nmsg.payload = `update IUGRED_99.brewctl set PROCESS_ADJUSTMENT = ${gas} where PROCESS_NAME = 'BOIL' `\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 180,
        "wires": [
            [
                "4ed4bc7f2457e810"
            ]
        ]
    },
    {
        "id": "48a5c3229cd1c884",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "PRODUCTION CONTROL",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "96684a43cba24266",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "LINK HAS BEEN PUT IN TO STOP PRODUCTION IF BOIL IS NOT 80-90DEG",
        "info": "",
        "x": 1610,
        "y": 300,
        "wires": []
    },
    {
        "id": "f721a9dcd6d33677",
        "type": "link in",
        "z": "6cb9e827f1da3428",
        "name": "Open Gate",
        "links": [
            "8e9eeaa5dd57d628"
        ],
        "x": 105,
        "y": 1380,
        "wires": [
            [
                "09bcc1db1992e246",
                "7890969e0be713e8",
                "4661035436a601d7"
            ]
        ]
    },
    {
        "id": "8e9eeaa5dd57d628",
        "type": "link out",
        "z": "6cb9e827f1da3428",
        "name": "Open Gate",
        "mode": "link",
        "links": [
            "388961ec1c4a4ca4",
            "f721a9dcd6d33677",
            "a12d75f59cbd5d0f"
        ],
        "x": 475,
        "y": 600,
        "wires": []
    },
    {
        "id": "5c74c51a053984f7",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "toggle",
        "payloadType": "str",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "8e9eeaa5dd57d628"
            ]
        ]
    },
    {
        "id": "04e3f966e6d9111b",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Water Slider",
        "info": "",
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "c569e3bb6b76a144",
        "type": "link out",
        "z": "6cb9e827f1da3428",
        "name": "Start",
        "mode": "link",
        "links": [
            "31ed3fef286941a7",
            "abcc83a1b8871d58"
        ],
        "x": 475,
        "y": 520,
        "wires": []
    },
    {
        "id": "1d4b618e7496dec8",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Heating Slider",
        "info": "",
        "x": 1390,
        "y": 140,
        "wires": []
    },
    {
        "id": "65ec37d2f15ed83b",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "WATER Starting Values - From table as set by production qty",
        "info": "",
        "x": 1440,
        "y": 800,
        "wires": []
    },
    {
        "id": "cb04332ad819f268",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Make sure Boiler is within operating temp range",
        "info": "",
        "x": 1120,
        "y": 900,
        "wires": []
    },
    {
        "id": "80b1907d3709da8e",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Make sure Boiler is within operating temp range",
        "info": "",
        "x": 1080,
        "y": 2000,
        "wires": []
    },
    {
        "id": "3787da9d1e7edae2",
        "type": "debug",
        "z": "6cb9e827f1da3428",
        "name": "debug 145",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 220,
        "wires": []
    },
    {
        "id": "d9392df67ae48c6a",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Manual Overrides",
        "info": "",
        "x": 390,
        "y": 940,
        "wires": []
    },
    {
        "id": "2ae8ae446d0f4163",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Manual Overrides",
        "info": "",
        "x": 390,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b3ecf79e7b95d63a",
        "type": "e-mail",
        "z": "6cb9e827f1da3428",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": false,
        "token": "",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1550,
        "y": 3040,
        "wires": []
    },
    {
        "id": "dd3009b50142c00b",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "CRISIS",
        "func": "var person = global.get('managemail') || 0;\nconsole.log('mail', person)\n\n// populate email variables \n// msg.payload = \"The <b> blooming </b> brewery is on fire!!!\"; // message\n\nmsg.payload = ` <head> <h1> The blooming brewery is on fire!!! </h1> </head >   \n    <body> <h2>Please call the fire brigade</h2> \n    <p><b>Your beer may be delayed...<b></p>  </body>`    ; // message\n    \nmsg.topic = \"Crisis Email\"; // subject\nmsg.to = person ;  // to\nmsg.from = \"iBrew & Co\";  // from\n// msg.cc = \"mryan@eoguk.com\";  // cc\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 3040,
        "wires": [
            [
                "b3ecf79e7b95d63a"
            ]
        ]
    },
    {
        "id": "fc265cf4b2cd9544",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 840,
        "y": 3040,
        "wires": [
            [
                "dd3009b50142c00b"
            ]
        ]
    },
    {
        "id": "b6c7a1edab673200",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "Set Deliveries to and Manager e-mail in e-mail flow",
        "info": "",
        "x": 290,
        "y": 2760,
        "wires": []
    },
    {
        "id": "b0a9f61591045fa0",
        "type": "e-mail",
        "z": "6cb9e827f1da3428",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1570,
        "y": 3160,
        "wires": []
    },
    {
        "id": "850b3170a55163ff",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Advise Customer that order is ready",
        "func": "var person = global.get('delivermail') || 0;\n\n// populate email variables \n\n// subject\n\nmsg.topic = \"i-Brew Delivery Advice\"; // subject\n\n//message\n\nmsg.payload = ` <head> <h1> Your Daily Order of Max Strenth 'Old Burgler' is on it's way. </h1> </head > \n<body> <h2> Driver will deliver between 13:47 and 14:11. </h2>  \n<p> P.S.  Driver will pick up yesterdays empties, as usual! </p> </body>`; // message to\n\nmsg.to = person ;  // to\n\n//from\n\nmsg.from = \"iBrew & Co\";  // from\n\n// msg.cc = \"mryan@eoguk.com\";  // cc\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3160,
        "wires": [
            [
                "b0a9f61591045fa0"
            ]
        ]
    },
    {
        "id": "44754a45c9dd5e9e",
        "type": "inject",
        "z": "6cb9e827f1da3428",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 840,
        "y": 3160,
        "wires": [
            [
                "850b3170a55163ff"
            ]
        ]
    },
    {
        "id": "b047129e2815bdb3",
        "type": "ui_form",
        "z": "6cb9e827f1da3428",
        "name": "Brewery Team",
        "label": "Brewery Team 1",
        "group": "ac1eab09c73ce8f3",
        "order": 3,
        "width": 8,
        "height": 1,
        "options": [
            {
                "label": "Deliveries Notification",
                "value": "deliver",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Management Advice",
                "value": "manage",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "deliver": "",
            "manage": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 240,
        "y": 2840,
        "wires": [
            [
                "c88ffcc9c6073f44"
            ]
        ]
    },
    {
        "id": "c88ffcc9c6073f44",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "function 68",
        "func": "let manage = msg.payload.manage\nlet deliver = msg.payload.deliver\n\nglobal.set('managemail', manage)\nglobal.set('delivermail', deliver)\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2840,
        "wires": [
            [
                "a404aa52e84e9d97"
            ]
        ]
    },
    {
        "id": "a404aa52e84e9d97",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "function 69",
        "func": "var manage = global.get('managemmail') \nvar deliver = global.get('delivermmail')\n\nmsg.payload = manage\nmsg.topic = deliver\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2840,
        "wires": [
            [
                "09f75721cebcf804"
            ]
        ]
    },
    {
        "id": "09f75721cebcf804",
        "type": "debug",
        "z": "6cb9e827f1da3428",
        "name": "debug 222",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 2840,
        "wires": []
    },
    {
        "id": "4541f15f7a562872",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "WHERE DO YOU THINK THESE SHOULD GO?",
        "info": "",
        "x": 620,
        "y": 2940,
        "wires": []
    },
    {
        "id": "4e805766335a2927",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "CRISIS AT THE BREWERY",
        "info": "",
        "x": 800,
        "y": 3000,
        "wires": []
    },
    {
        "id": "67060440eca919cc",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "name": "YOUR ORDER IS ON ITS WAY",
        "info": "",
        "x": 810,
        "y": 3120,
        "wires": []
    },
    {
        "id": "6b0e6b89d3457053",
        "type": "debug",
        "z": "6cb9e827f1da3428",
        "name": "debug 226",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 320,
        "wires": []
    },
    {
        "id": "0593b801ee97ccb5",
        "type": "debug",
        "z": "6cb9e827f1da3428",
        "name": "debug 227",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 380,
        "wires": []
    },
    {
        "id": "c809a0a319b9abc6",
        "type": "debug",
        "z": "6cb9e827f1da3428",
        "name": "debug 228",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 480,
        "wires": []
    },
    {
        "id": "e66593ab5ddc0335",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 520,
        "wires": [
            [
                "c569e3bb6b76a144"
            ]
        ]
    },
    {
        "id": "2459b428e1f8d6fd",
        "type": "ui_artlessgauge",
        "z": "6cb9e827f1da3428",
        "group": "3a71324c40ab6674",
        "order": 1,
        "width": 8,
        "height": 8,
        "name": "",
        "icon": "",
        "label": "Cases Produced",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": true,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "value",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#ff9900",
                "t": "min",
                "dot": 5
            },
            {
                "val": 500,
                "col": "#ff9900",
                "t": "max",
                "dot": 5
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1440,
        "y": 2260,
        "wires": []
    },
    {
        "id": "4cad546e01a59740",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "name": "Reset Payload for Graph",
        "func": "msg.payload = msg.topic\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2240,
        "wires": [
            [
                "250e7d66b01607cc"
            ]
        ]
    },
    {
        "id": "1b9e034487ccfe4b",
        "type": "debug",
        "z": "6cb9e827f1da3428",
        "name": "debug 999",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 2860,
        "wires": []
    },
    {
        "id": "5340b351362e7876",
        "type": "group",
        "z": "6cb9e827f1da3428",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e6be040bf904c43e",
            "994a15d975f3ab99",
            "0805696e270fd33a",
            "1ba0ef484b304f11",
            "903d7ab799d4383c",
            "9a990835f6ebfec5",
            "fcbeafbe0f6d9896",
            "efdb8e3f81e3ec0a",
            "31ed3fef286941a7",
            "0d8f511d3ab48dca",
            "a12d75f59cbd5d0f"
        ],
        "x": 814,
        "y": 399,
        "w": 1072,
        "h": 302
    },
    {
        "id": "e6be040bf904c43e",
        "type": "ui_gauge",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": " INGREDIENT COUNT",
        "group": "01b5bec2534e4f4a",
        "order": 3,
        "width": 8,
        "height": 7,
        "gtype": "compass",
        "title": "INGREDIENT COUNT",
        "label": "BAILS",
        "format": "{{value | number}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "45",
        "seg2": "85",
        "className": "",
        "x": 1760,
        "y": 660,
        "wires": []
    },
    {
        "id": "994a15d975f3ab99",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "Maintain Hop Count",
        "func": "\nvar hops = flow.get('hopcount') || 1;\n\n\n\n// let hoptot = parseInt(hopcount, 10)\n\nlet hopadd = hops +1\n\n\nflow.set('hopcount', hopadd)\n\nmsg.value = hopadd\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 660,
        "wires": [
            [
                "e6be040bf904c43e",
                "0805696e270fd33a"
            ]
        ]
    },
    {
        "id": "0805696e270fd33a",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 660,
        "wires": [
            [
                "0d8f511d3ab48dca"
            ]
        ]
    },
    {
        "id": "1ba0ef484b304f11",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "Set Hopper Value - 1",
        "func": "\nmsg.value = 1\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 500,
        "wires": [
            [
                "903d7ab799d4383c",
                "9a990835f6ebfec5"
            ]
        ]
    },
    {
        "id": "903d7ab799d4383c",
        "type": "ui_gauge",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "HOPPER INJECT",
        "group": "01b5bec2534e4f4a",
        "order": 2,
        "width": 8,
        "height": 5,
        "gtype": "gage",
        "title": "HOPPER INJECT",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#d53939"
        ],
        "seg1": "0",
        "seg2": "1",
        "className": "",
        "x": 1750,
        "y": 500,
        "wires": []
    },
    {
        "id": "9a990835f6ebfec5",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 560,
        "wires": [
            [
                "fcbeafbe0f6d9896"
            ]
        ]
    },
    {
        "id": "fcbeafbe0f6d9896",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "Set Hopper value - 0",
        "func": "\nmsg.value = 0\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 560,
        "wires": [
            [
                "903d7ab799d4383c"
            ]
        ]
    },
    {
        "id": "efdb8e3f81e3ec0a",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "Hops in - No coding  >>>>>>>>>",
        "info": "",
        "x": 970,
        "y": 440,
        "wires": []
    },
    {
        "id": "31ed3fef286941a7",
        "type": "link in",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "Start",
        "links": [
            "c569e3bb6b76a144"
        ],
        "x": 865,
        "y": 500,
        "wires": [
            [
                "0d8f511d3ab48dca"
            ]
        ]
    },
    {
        "id": "0d8f511d3ab48dca",
        "type": "gate",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 1050,
        "y": 500,
        "wires": [
            [
                "1ba0ef484b304f11",
                "994a15d975f3ab99"
            ]
        ]
    },
    {
        "id": "a12d75f59cbd5d0f",
        "type": "link in",
        "z": "6cb9e827f1da3428",
        "g": "5340b351362e7876",
        "name": "link in 1",
        "links": [
            "8e9eeaa5dd57d628"
        ],
        "x": 865,
        "y": 560,
        "wires": [
            [
                "0d8f511d3ab48dca"
            ]
        ]
    },
    {
        "id": "dbce495393c87484",
        "type": "group",
        "z": "6cb9e827f1da3428",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0c457980d2fe3da6",
            "ddbf8735b4dde252",
            "27d2bc19dc6cf98b",
            "1db955afe1c56d60",
            "4810a06aa4f2ab23",
            "71cf7df1f8f6ff46",
            "e406fed4902274c6",
            "d378d8917884dbab",
            "abcc83a1b8871d58",
            "4cbd2e109267f701",
            "388961ec1c4a4ca4",
            "439597fdb8b96a98",
            "1c61fc6531d320b9",
            "557f22db08bad74a"
        ],
        "x": 644,
        "y": 1519,
        "w": 1282,
        "h": 322
    },
    {
        "id": "0c457980d2fe3da6",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "Swirl and Mash - No coding  >>>>>>>>>",
        "info": "",
        "x": 830,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ddbf8735b4dde252",
        "type": "ui_gauge",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "SWIRL",
        "group": "ac1eab09c73ce8f3",
        "order": 2,
        "width": 8,
        "height": 7,
        "gtype": "donut",
        "title": "SWIRL",
        "label": "Rotations",
        "format": "{{value | number}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "45",
        "seg2": "85",
        "className": "",
        "x": 1840,
        "y": 1740,
        "wires": []
    },
    {
        "id": "27d2bc19dc6cf98b",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "Set SWIRL Gauge value - 1000",
        "func": "\nmsg.value = 1000\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1720,
        "wires": [
            [
                "ddbf8735b4dde252",
                "1db955afe1c56d60",
                "439597fdb8b96a98"
            ]
        ]
    },
    {
        "id": "1db955afe1c56d60",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1020,
        "y": 1800,
        "wires": [
            [
                "4cbd2e109267f701"
            ]
        ]
    },
    {
        "id": "4810a06aa4f2ab23",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "Set MASH Gauge Value - 1",
        "func": "\nmsg.value = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1600,
        "wires": [
            [
                "71cf7df1f8f6ff46",
                "e406fed4902274c6"
            ]
        ]
    },
    {
        "id": "71cf7df1f8f6ff46",
        "type": "ui_gauge",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "MASH",
        "group": "ac1eab09c73ce8f3",
        "order": 1,
        "width": 8,
        "height": 6,
        "gtype": "gage",
        "title": "MASAH",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#d53939"
        ],
        "seg1": "0",
        "seg2": "1",
        "className": "",
        "x": 1810,
        "y": 1600,
        "wires": []
    },
    {
        "id": "e406fed4902274c6",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1380,
        "y": 1680,
        "wires": [
            [
                "d378d8917884dbab"
            ]
        ]
    },
    {
        "id": "d378d8917884dbab",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "Set Mash Gauge Value - 0",
        "func": "\nmsg.value = 0\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 1680,
        "wires": [
            [
                "71cf7df1f8f6ff46"
            ]
        ]
    },
    {
        "id": "abcc83a1b8871d58",
        "type": "link in",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "Start",
        "links": [
            "c569e3bb6b76a144"
        ],
        "x": 685,
        "y": 1620,
        "wires": [
            [
                "557f22db08bad74a"
            ]
        ]
    },
    {
        "id": "4cbd2e109267f701",
        "type": "gate",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 1050,
        "y": 1680,
        "wires": [
            [
                "4810a06aa4f2ab23",
                "27d2bc19dc6cf98b"
            ]
        ]
    },
    {
        "id": "388961ec1c4a4ca4",
        "type": "link in",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "link in 2",
        "links": [
            "8e9eeaa5dd57d628"
        ],
        "x": 815,
        "y": 1680,
        "wires": [
            [
                "4cbd2e109267f701"
            ]
        ]
    },
    {
        "id": "439597fdb8b96a98",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 1800,
        "wires": [
            [
                "1c61fc6531d320b9"
            ]
        ]
    },
    {
        "id": "1c61fc6531d320b9",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "Set Swirl gauge value - 0",
        "func": "\nmsg.value = 0\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1800,
        "wires": [
            [
                "ddbf8735b4dde252"
            ]
        ]
    },
    {
        "id": "557f22db08bad74a",
        "type": "delay",
        "z": "6cb9e827f1da3428",
        "g": "dbce495393c87484",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 1620,
        "wires": [
            [
                "4cbd2e109267f701"
            ]
        ]
    },
    {
        "id": "c9549c40a69d8c7d",
        "type": "group",
        "z": "6cb9e827f1da3428",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "777be62f81b91e77",
            "9572074bda53f8a2",
            "8e2b7d9f82a89259",
            "6d10b42e72d3309f",
            "f1aa1eb467a3993a",
            "896b223aa3fe7fe8"
        ],
        "x": 1954,
        "y": 2519,
        "w": 392,
        "h": 182
    },
    {
        "id": "777be62f81b91e77",
        "type": "exec",
        "z": "6cb9e827f1da3428",
        "g": "c9549c40a69d8c7d",
        "command": "env",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2005,
        "y": 2640,
        "wires": [
            [
                "8e2b7d9f82a89259",
                "6d10b42e72d3309f"
            ],
            [
                "8e2b7d9f82a89259"
            ],
            [
                "8e2b7d9f82a89259"
            ]
        ],
        "l": false
    },
    {
        "id": "9572074bda53f8a2",
        "type": "mqtt out",
        "z": "6cb9e827f1da3428",
        "g": "c9549c40a69d8c7d",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "de887429d516dace",
        "x": 2235,
        "y": 2620,
        "wires": [],
        "l": false
    },
    {
        "id": "8e2b7d9f82a89259",
        "type": "debug",
        "z": "6cb9e827f1da3428",
        "g": "c9549c40a69d8c7d",
        "name": "debug 237",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2145,
        "y": 2660,
        "wires": [],
        "l": false
    },
    {
        "id": "6d10b42e72d3309f",
        "type": "function",
        "z": "6cb9e827f1da3428",
        "g": "c9549c40a69d8c7d",
        "name": "function 53",
        "func": "let user  = ' '\nlet start = msg.payload.search(\"USER\") + 5;\nlet stop = msg.payload.search(\"SHLVL\") - 1;\n\n\nlet currentDate = new Date();\nlet cDay = currentDate.getDate()\nlet cMonth = currentDate.getMonth() + 1\nlet cYear = currentDate.getFullYear()\n\nlet stdate = cYear + \"-\" + cMonth + \"-\" + cDay;\n\nlet sttime = currentDate.getHours() + \":\" + currentDate.getMinutes() + \":\" + currentDate.getSeconds();\n\nvar crates = flow.get('cvaluexx')\nvar temp = flow.get('bvaluexx')\n\nlet diff = stop - start\n\nuser = msg.payload.substr(start, diff )\n\nmsg.topic = user\nmsg.payload = `{\"Student_Number\" : \"${user}\", \"Brew_Temp\": ${temp}, \"Cases_Out\": ${crates}, \"OPDATE\": \"${stdate}\", \"OPTIME\": \"${sttime}\"}`\nconsole.log('payload', msg.payload) \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2095,
        "y": 2620,
        "wires": [
            [
                "f1aa1eb467a3993a"
            ]
        ],
        "l": false
    },
    {
        "id": "f1aa1eb467a3993a",
        "type": "json",
        "z": "6cb9e827f1da3428",
        "g": "c9549c40a69d8c7d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2165,
        "y": 2620,
        "wires": [
            [
                "9572074bda53f8a2"
            ]
        ],
        "l": false
    },
    {
        "id": "896b223aa3fe7fe8",
        "type": "comment",
        "z": "6cb9e827f1da3428",
        "g": "c9549c40a69d8c7d",
        "name": "Support:  PEASE DO NOT ALTER THIS CODE",
        "info": "",
        "x": 2150,
        "y": 2560,
        "wires": []
    },
    {
        "id": "de887429d516dace",
        "type": "mqtt-broker",
        "name": "",
        "broker": "ersc.ddns.net",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c783136d02b66193",
        "type": "DB2 for i Config",
        "cnnname": "IUGRED",
        "db": "*LOCAL",
        "keepalive": true
    },
    {
        "id": "3e86821e0e02d9da",
        "type": "ui_group",
        "name": "Brew Temperature Control",
        "tab": "2215323be190c922",
        "order": 4,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e207eea38c442aee",
        "type": "ui_group",
        "name": "Water Control",
        "tab": "2215323be190c922",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a71324c40ab6674",
        "type": "ui_group",
        "name": "Case Production",
        "tab": "2215323be190c922",
        "order": 7,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "01b5bec2534e4f4a",
        "type": "ui_group",
        "name": "Hopper",
        "tab": "2215323be190c922",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ac1eab09c73ce8f3",
        "type": "ui_group",
        "name": "SWIRL AND MASH",
        "tab": "2215323be190c922",
        "order": 5,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2215323be190c922",
        "type": "ui_tab",
        "name": "i-Brew Brewery",
        "icon": "Hops-In",
        "disabled": false,
        "hidden": false
    }
]
